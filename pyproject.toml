[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
authors = [
  {name = "Frank Hoffmann", email = "15r10nk@polarbit.de"}
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy"
]

dependencies = [
]
description = 'PEP 690 like lazy imports for python'
keywords = []
license = "MIT"
name = "lazy-imports-lite"
readme = "README.md"
requires-python = ">=3.8"
version="0.1.1"


[project.scripts]
lazy-imports-lite = "lazy_imports_lite.__main__:main"


[project.urls]
Documentation = "https://github.com/15r10nk/lazy-imports-lite#readme"
Issues = "https://github.com/15r10nk/lazy-imports-lite/issues"
Source = "https://github.com/15r10nk/lazy-imports-lite"

[tool.black]
target-version = ["py38"]

[tool.commitizen]
changelog_incremental = true
major_version_zero = true
tag_format = "v$major.$minor.$patch$prerelease"
update_changelog_on_bump = true
version_files = [
  "src/lazy_imports_lite/__init__.py:version"
]
version_provider = "pep621"

[tool.coverage.paths]
lazy_imports_lite = ["src/lazy_imports_lite", "*/lazy-imports-lite/src/lazy_imports_lite"]
tests = ["tests", "*/lazy-imports-lite/tests"]

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "assert False", "raise NotImplemented", "\\.\\.\\."]

[tool.coverage.run]
branch = true
parallel = true
data_file = "$TOP/.coverage"
source_pkgs = ["lazy_imports_lite", "tests"]
source=["src"]


[tool.hatch.build.targets.wheel.hooks.autorun]
dependencies = ["hatch-autorun"]

code = """
from lazy_imports_lite._loader import setup
setup()
"""

[tool.hatch.envs.default]
scripts.test = "pytest {args:tests}"
dependencies = [
  "pytest",
  "inline-snapshot",
    "astunparse"
]

# all
[tool.hatch.envs.all]
dependencies = [
  "coverage[toml]>=6.5",
  "coverage-enable-subprocess",
  "pytest",
  "inline-snapshot",
  "astunparse",
  "mypy",
]
env-vars.TOP = "{root}"
scripts.test-cov = "coverage run -m pytest {args:tests}"
scripts.test = "pytest {args:tests}"
scripts.test-mypy = "mypy src tests"

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

# coverage
[tool.hatch.envs.all-cov]
template="all"
extra-dependencies = [
  "coverage[toml]>=6.5",
  "coverage-enable-subprocess",
]
env-vars.TOP = "{root}"
scripts.test = "coverage run -m pytest {args:tests}"

[[tool.hatch.envs.all-cov.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.cov]
dependencies = ["coverage[toml]>=6.5"]
detached = true
env-vars.TOP = "{root}"
env-vars.COVERAGE_PROCESS_START = "{root}/pyproject.toml"
scripts.all = [
  "- coverage erase",
  "hatch run all-cov:test -- {args}",
  "coverage combine",
  "coverage html",
  "coverage report  --fail-under 100 "
]

scripts.one = [
  "- coverage erase",
  "hatch run +py=3.12 all-cov:test -- {args}",
  "coverage combine",
  "coverage html",
  "coverage report  --fail-under 100 "
]



[tool.hatch.envs.docs]
dependencies = [
  "mkdocs>=1.4.2",
  "mkdocs-material[imaging]>=8.5.10",
  "mkdocstrings>=0.19.0"
]
scripts.serve = ["mkdocs serve {args}"]

[tool.hatch.version]
path = "src/lazy_imports_lite/__init__.py"
